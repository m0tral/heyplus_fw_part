/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Wed Nov 29 18:01:44 2017. */

#ifndef PB_RUP_PB_H_INCLUDED
#define PB_RUP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _CMD {
    CMD_PROP_GET = 0,
    CMD_PROP_SET = 1,
    CMD_PROP_EVENT = 2,
    CMD_PROP_DATA = 3,
    CMD_PROP_LOG = 4,
    CMD_DEV_GET_DEV_STATUS = 5,
    CMD_DEV_GET_DEV_INFO = 6,
    CMD_DEV_GET_CERT = 7,
    CMD_DEV_GET_UNBIND_TOKEN = 8,
    CMD_DEV_BIND_ACK = 9,
    CMD_DEV_UNBIND = 10,
    CMD_DEV_SET_TIME = 11,
    CMD_APP_UNBIND = 1000
} CMD;
#define _CMD_MIN CMD_PROP_GET
#define _CMD_MAX CMD_APP_UNBIND
#define _CMD_ARRAYSIZE ((CMD)(CMD_APP_UNBIND+1))

typedef enum _TYPE {
    TYPE_DEV_INFO = 0,
    TYPE_FIT_HEALTH = 1,
    TYPE_CARD = 2,
    TYPE_CALENDAR = 3,
    TYPE_DIAGNOSTIC = 4
} TYPE;
#define _TYPE_MIN TYPE_DEV_INFO
#define _TYPE_MAX TYPE_DIAGNOSTIC
#define _TYPE_ARRAYSIZE ((TYPE)(TYPE_DIAGNOSTIC+1))

/* Struct definitions */
typedef struct _RbpMsg_Req {
    pb_callback_t val;
/* @@protoc_insertion_point(struct:RbpMsg_Req) */
} RbpMsg_Req;

typedef struct _RbpMsg_Big {
    int32_t sn;
    pb_callback_t val;
/* @@protoc_insertion_point(struct:RbpMsg_Big) */
} RbpMsg_Big;

typedef struct _RbpMsg_Profile {
    TYPE type;
    pb_callback_t val;
/* @@protoc_insertion_point(struct:RbpMsg_Profile) */
} RbpMsg_Profile;

typedef struct _RbpMsg_Res {
    int32_t code;
    pb_callback_t val;
/* @@protoc_insertion_point(struct:RbpMsg_Res) */
} RbpMsg_Res;

typedef struct _RbpMsg {
    int32_t protocol_ver;
    CMD cmd;
    bool has_session_id;
    int32_t session_id;
    pb_size_t which_message;
    union {
        RbpMsg_Req req;
        RbpMsg_Res res;
        RbpMsg_Profile profile;
        RbpMsg_Big big_data;
    } message;
/* @@protoc_insertion_point(struct:RbpMsg) */
} RbpMsg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define RbpMsg_init_default                      {0, (CMD)0, false, 0, 0, {RbpMsg_Req_init_default}}
#define RbpMsg_Req_init_default                  {{{NULL}, NULL}}
#define RbpMsg_Res_init_default                  {0, {{NULL}, NULL}}
#define RbpMsg_Profile_init_default              {(TYPE)0, {{NULL}, NULL}}
#define RbpMsg_Big_init_default                  {0, {{NULL}, NULL}}
#define RbpMsg_init_zero                         {0, (CMD)0, false, 0, 0, {RbpMsg_Req_init_zero}}
#define RbpMsg_Req_init_zero                     {{{NULL}, NULL}}
#define RbpMsg_Res_init_zero                     {0, {{NULL}, NULL}}
#define RbpMsg_Profile_init_zero                 {(TYPE)0, {{NULL}, NULL}}
#define RbpMsg_Big_init_zero                     {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define RbpMsg_Req_val_tag                       1
#define RbpMsg_Big_sn_tag                        1
#define RbpMsg_Big_val_tag                       2
#define RbpMsg_Profile_type_tag                  1
#define RbpMsg_Profile_val_tag                   2
#define RbpMsg_Res_code_tag                      1
#define RbpMsg_Res_val_tag                       2
#define RbpMsg_req_tag                           4
#define RbpMsg_res_tag                           5
#define RbpMsg_profile_tag                       6
#define RbpMsg_big_data_tag                      7
#define RbpMsg_protocol_ver_tag                  1
#define RbpMsg_cmd_tag                           2
#define RbpMsg_session_id_tag                    3

/* Struct field encoding specification for nanopb */
extern const pb_field_t RbpMsg_fields[8];
extern const pb_field_t RbpMsg_Req_fields[2];
extern const pb_field_t RbpMsg_Res_fields[3];
extern const pb_field_t RbpMsg_Profile_fields[3];
extern const pb_field_t RbpMsg_Big_fields[3];

/* Maximum encoded size of messages (where known) */
/* RbpMsg_size depends on runtime parameters */
/* RbpMsg_Req_size depends on runtime parameters */
/* RbpMsg_Res_size depends on runtime parameters */
/* RbpMsg_Profile_size depends on runtime parameters */
/* RbpMsg_Big_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RUP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
