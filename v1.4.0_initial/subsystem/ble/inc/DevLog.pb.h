/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Fri Jun 01 19:12:24 2018. */

#ifndef PB_DEVLOG_PB_H_INCLUDED
#define PB_DEVLOG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(1900) DevLogData_content_t;
typedef struct _DevLogData {
    int32_t session_id;
    int32_t sn;
    DevLogData_content_t content;
/* @@protoc_insertion_point(struct:DevLogData) */
} DevLogData;

typedef struct _DevLogStartResult {
    int32_t session_id;
    int32_t total;
/* @@protoc_insertion_point(struct:DevLogStartResult) */
} DevLogStartResult;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DevLogStartResult_init_default           {0, 0}
#define DevLogData_init_default                  {0, 0, {0, {0}}}
#define DevLogStartResult_init_zero              {0, 0}
#define DevLogData_init_zero                     {0, 0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define DevLogData_session_id_tag                1
#define DevLogData_sn_tag                        2
#define DevLogData_content_tag                   3
#define DevLogStartResult_session_id_tag         1
#define DevLogStartResult_total_tag              2

/* Struct field encoding specification for nanopb */
extern const pb_field_t DevLogStartResult_fields[3];
extern const pb_field_t DevLogData_fields[4];

/* Maximum encoded size of messages (where known) */
#define DevLogStartResult_size                   22
#define DevLogData_size                          1925

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DEVLOG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
