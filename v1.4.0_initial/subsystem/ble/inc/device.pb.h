/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Sep 24 17:50:31 2018. */

#ifndef PB_DEVICE_PB_H_INCLUDED
#define PB_DEVICE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _TokenType {
    TokenType_DEVICE_RYEEX_UNBIND = 1,
    TokenType_DEVICE_MI_UNBIND = 2,
    TokenType_DEVICE_MI_RYEEX_DID = 3,
    TokenType_SERVER_RYEEX_UNBIND = 100,
    TokenType_SERVER_MI_UNBIND = 101,
    TokenType_SERVER_RYEEX_BIND = 102
} TokenType;
#define _TokenType_MIN TokenType_DEVICE_RYEEX_UNBIND
#define _TokenType_MAX TokenType_SERVER_RYEEX_BIND
#define _TokenType_ARRAYSIZE ((TokenType)(TokenType_SERVER_RYEEX_BIND+1))

/* Struct definitions */
typedef struct _RepairResStartResult {
    char dummy_field;
/* @@protoc_insertion_point(struct:RepairResStartResult) */
} RepairResStartResult;

typedef struct _BindAckResult {
    int32_t code;
/* @@protoc_insertion_point(struct:BindAckResult) */
} BindAckResult;

typedef struct _BindResult {
    int32_t error;
    bool has_uid;
    char uid[32];
/* @@protoc_insertion_point(struct:BindResult) */
} BindResult;

typedef struct _BleConnIntervalParam {
    int32_t ble_conn_interval;
/* @@protoc_insertion_point(struct:BleConnIntervalParam) */
} BleConnIntervalParam;

typedef PB_BYTES_ARRAY_T(48) DeviceCredential_sign_t;
typedef struct _DeviceCredential {
    int32_t sn;
    int32_t nonce;
    char did[20];
    DeviceCredential_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:DeviceCredential) */
} DeviceCredential;

typedef PB_BYTES_ARRAY_T(6) DeviceInfo_mac_t;
typedef struct _DeviceInfo {
    char did[20];
    DeviceInfo_mac_t mac;
    char model[50];
    char fw_ver[10];
    char uid[32];
/* @@protoc_insertion_point(struct:DeviceInfo) */
} DeviceInfo;

typedef struct _DeviceLostFileNames {
    int32_t file_names;
    char version[20];
    pb_callback_t name_list;
/* @@protoc_insertion_point(struct:DeviceLostFileNames) */
} DeviceLostFileNames;

typedef PB_BYTES_ARRAY_T(48) DeviceMiRyeexDidToken_sign_t;
typedef struct _DeviceMiRyeexDidToken {
    TokenType token_type;
    int32_t sn;
    int32_t nonce;
    char ryeex_did[20];
    char mi_did[20];
    DeviceMiRyeexDidToken_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:DeviceMiRyeexDidToken) */
} DeviceMiRyeexDidToken;

typedef PB_BYTES_ARRAY_T(48) DeviceMiUnBindToken_sign_t;
typedef struct _DeviceMiUnBindToken {
    TokenType token_type;
    int32_t sn;
    int32_t nonce;
    char ryeex_did[20];
    DeviceMiUnBindToken_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:DeviceMiUnBindToken) */
} DeviceMiUnBindToken;

typedef struct _DeviceRunState {
    int32_t main_state;
/* @@protoc_insertion_point(struct:DeviceRunState) */
} DeviceRunState;

typedef struct _DeviceStatus {
    char did[20];
    bool se_activate_status;
    bool ryeex_cert_activate_status;
    bool mi_cert_activate_status;
    bool ryeex_bind_status;
    bool mi_bind_status;
    int32_t pb_max;
    int32_t ble_conn_interval;
    bool has_fw_ver;
    char fw_ver[10];
    bool has_mi_did;
    char mi_did[20];
    pb_size_t accept_sec_suite_count;
    int32_t accept_sec_suite[10];
    bool has_ryeex_uid;
    char ryeex_uid[20];
    bool has_check_status;
    int32_t check_status;
/* @@protoc_insertion_point(struct:DeviceStatus) */
} DeviceStatus;

typedef PB_BYTES_ARRAY_T(48) DeviceUnBindToken_sign_t;
typedef struct _DeviceUnBindToken {
    int32_t sn;
    int32_t nonce;
    char did[20];
    DeviceUnBindToken_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:DeviceUnBindToken) */
} DeviceUnBindToken;

typedef struct _RepairResStartParam {
    int32_t length;
/* @@protoc_insertion_point(struct:RepairResStartParam) */
} RepairResStartParam;

typedef struct _SeActivateResult {
    int32_t code;
/* @@protoc_insertion_point(struct:SeActivateResult) */
} SeActivateResult;

typedef PB_BYTES_ARRAY_T(48) ServerMiUnBindToken_sign_t;
typedef struct _ServerMiUnBindToken {
    TokenType token_type;
    int32_t sn;
    int32_t nonce;
    char ryeex_did[20];
    ServerMiUnBindToken_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:ServerMiUnBindToken) */
} ServerMiUnBindToken;

typedef PB_BYTES_ARRAY_T(15) ServerRyeexBindToken_ryeex_device_token_t;
typedef PB_BYTES_ARRAY_T(48) ServerRyeexBindToken_sign_t;
typedef struct _ServerRyeexBindToken {
    TokenType token_type;
    int32_t sn;
    int32_t nonce;
    char ryeex_did[20];
    char ryeex_uid[20];
    ServerRyeexBindToken_ryeex_device_token_t ryeex_device_token;
    ServerRyeexBindToken_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:ServerRyeexBindToken) */
} ServerRyeexBindToken;

typedef PB_BYTES_ARRAY_T(48) ServerUnBindToken_sign_t;
typedef struct _ServerUnBindToken {
    int32_t sn;
    int32_t nonce;
    char did[20];
    ServerUnBindToken_sign_t sign;
    int32_t sign_ver;
/* @@protoc_insertion_point(struct:ServerUnBindToken) */
} ServerUnBindToken;

typedef struct _UploadFileMeta {
    char file_name[2048];
/* @@protoc_insertion_point(struct:UploadFileMeta) */
} UploadFileMeta;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DeviceStatus_init_default                {"", 0, 0, 0, 0, 0, 0, 0, false, "", false, "", 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, 0}
#define DeviceRunState_init_default              {0}
#define SeActivateResult_init_default            {0}
#define DeviceInfo_init_default                  {"", {0, {0}}, "", "", ""}
#define DeviceCredential_init_default            {0, 0, "", {0, {0}}, 0}
#define DeviceUnBindToken_init_default           {0, 0, "", {0, {0}}, 0}
#define DeviceMiUnBindToken_init_default         {(TokenType)0, 0, 0, "", {0, {0}}, 0}
#define DeviceMiRyeexDidToken_init_default       {(TokenType)0, 0, 0, "", "", {0, {0}}, 0}
#define ServerUnBindToken_init_default           {0, 0, "", {0, {0}}, 0}
#define ServerMiUnBindToken_init_default         {(TokenType)0, 0, 0, "", {0, {0}}, 0}
#define ServerRyeexBindToken_init_default        {(TokenType)0, 0, 0, "", "", {0, {0}}, {0, {0}}, 0}
#define DeviceLostFileNames_init_default         {0, "", {{NULL}, NULL}}
#define BindAckResult_init_default               {0}
#define BindResult_init_default                  {0, false, ""}
#define UploadFileMeta_init_default              {""}
#define BleConnIntervalParam_init_default        {0}
#define RepairResStartParam_init_default         {0}
#define RepairResStartResult_init_default        {0}
#define DeviceStatus_init_zero                   {"", 0, 0, 0, 0, 0, 0, 0, false, "", false, "", 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, 0}
#define DeviceRunState_init_zero                 {0}
#define SeActivateResult_init_zero               {0}
#define DeviceInfo_init_zero                     {"", {0, {0}}, "", "", ""}
#define DeviceCredential_init_zero               {0, 0, "", {0, {0}}, 0}
#define DeviceUnBindToken_init_zero              {0, 0, "", {0, {0}}, 0}
#define DeviceMiUnBindToken_init_zero            {(TokenType)0, 0, 0, "", {0, {0}}, 0}
#define DeviceMiRyeexDidToken_init_zero          {(TokenType)0, 0, 0, "", "", {0, {0}}, 0}
#define ServerUnBindToken_init_zero              {0, 0, "", {0, {0}}, 0}
#define ServerMiUnBindToken_init_zero            {(TokenType)0, 0, 0, "", {0, {0}}, 0}
#define ServerRyeexBindToken_init_zero           {(TokenType)0, 0, 0, "", "", {0, {0}}, {0, {0}}, 0}
#define DeviceLostFileNames_init_zero            {0, "", {{NULL}, NULL}}
#define BindAckResult_init_zero                  {0}
#define BindResult_init_zero                     {0, false, ""}
#define UploadFileMeta_init_zero                 {""}
#define BleConnIntervalParam_init_zero           {0}
#define RepairResStartParam_init_zero            {0}
#define RepairResStartResult_init_zero           {0}

/* Field tags (for use in manual encoding/decoding) */
#define BindAckResult_code_tag                   1
#define BindResult_error_tag                     1
#define BindResult_uid_tag                       2
#define BleConnIntervalParam_ble_conn_interval_tag 1
#define DeviceCredential_sn_tag                  1
#define DeviceCredential_nonce_tag               2
#define DeviceCredential_did_tag                 3
#define DeviceCredential_sign_tag                4
#define DeviceCredential_sign_ver_tag            5
#define DeviceInfo_did_tag                       1
#define DeviceInfo_mac_tag                       2
#define DeviceInfo_model_tag                     3
#define DeviceInfo_fw_ver_tag                    4
#define DeviceInfo_uid_tag                       5
#define DeviceLostFileNames_file_names_tag       1
#define DeviceLostFileNames_version_tag          2
#define DeviceLostFileNames_name_list_tag        3
#define DeviceMiRyeexDidToken_token_type_tag     1
#define DeviceMiRyeexDidToken_sn_tag             2
#define DeviceMiRyeexDidToken_nonce_tag          3
#define DeviceMiRyeexDidToken_ryeex_did_tag      4
#define DeviceMiRyeexDidToken_mi_did_tag         5
#define DeviceMiRyeexDidToken_sign_tag           6
#define DeviceMiRyeexDidToken_sign_ver_tag       7
#define DeviceMiUnBindToken_token_type_tag       1
#define DeviceMiUnBindToken_sn_tag               2
#define DeviceMiUnBindToken_nonce_tag            3
#define DeviceMiUnBindToken_ryeex_did_tag        4
#define DeviceMiUnBindToken_sign_tag             5
#define DeviceMiUnBindToken_sign_ver_tag         6
#define DeviceRunState_main_state_tag            1
#define DeviceStatus_did_tag                     1
#define DeviceStatus_se_activate_status_tag      2
#define DeviceStatus_ryeex_cert_activate_status_tag 3
#define DeviceStatus_mi_cert_activate_status_tag 4
#define DeviceStatus_ryeex_bind_status_tag       5
#define DeviceStatus_mi_bind_status_tag          6
#define DeviceStatus_pb_max_tag                  7
#define DeviceStatus_ble_conn_interval_tag       8
#define DeviceStatus_fw_ver_tag                  9
#define DeviceStatus_mi_did_tag                  10
#define DeviceStatus_accept_sec_suite_tag        11
#define DeviceStatus_ryeex_uid_tag               12
#define DeviceStatus_check_status_tag            13
#define DeviceUnBindToken_sn_tag                 1
#define DeviceUnBindToken_nonce_tag              2
#define DeviceUnBindToken_did_tag                3
#define DeviceUnBindToken_sign_tag               4
#define DeviceUnBindToken_sign_ver_tag           5
#define RepairResStartParam_length_tag           1
#define SeActivateResult_code_tag                1
#define ServerMiUnBindToken_token_type_tag       1
#define ServerMiUnBindToken_sn_tag               2
#define ServerMiUnBindToken_nonce_tag            3
#define ServerMiUnBindToken_ryeex_did_tag        4
#define ServerMiUnBindToken_sign_tag             5
#define ServerMiUnBindToken_sign_ver_tag         6
#define ServerRyeexBindToken_token_type_tag      1
#define ServerRyeexBindToken_sn_tag              2
#define ServerRyeexBindToken_nonce_tag           3
#define ServerRyeexBindToken_ryeex_did_tag       4
#define ServerRyeexBindToken_ryeex_uid_tag       5
#define ServerRyeexBindToken_ryeex_device_token_tag 6
#define ServerRyeexBindToken_sign_tag            7
#define ServerRyeexBindToken_sign_ver_tag        8
#define ServerUnBindToken_sn_tag                 1
#define ServerUnBindToken_nonce_tag              2
#define ServerUnBindToken_did_tag                3
#define ServerUnBindToken_sign_tag               4
#define ServerUnBindToken_sign_ver_tag           5
#define UploadFileMeta_file_name_tag             1

/* Struct field encoding specification for nanopb */
extern const pb_field_t DeviceStatus_fields[14];
extern const pb_field_t DeviceRunState_fields[2];
extern const pb_field_t SeActivateResult_fields[2];
extern const pb_field_t DeviceInfo_fields[6];
extern const pb_field_t DeviceCredential_fields[6];
extern const pb_field_t DeviceUnBindToken_fields[6];
extern const pb_field_t DeviceMiUnBindToken_fields[7];
extern const pb_field_t DeviceMiRyeexDidToken_fields[8];
extern const pb_field_t ServerUnBindToken_fields[6];
extern const pb_field_t ServerMiUnBindToken_fields[7];
extern const pb_field_t ServerRyeexBindToken_fields[9];
extern const pb_field_t DeviceLostFileNames_fields[4];
extern const pb_field_t BindAckResult_fields[2];
extern const pb_field_t BindResult_fields[3];
extern const pb_field_t UploadFileMeta_fields[2];
extern const pb_field_t BleConnIntervalParam_fields[2];
extern const pb_field_t RepairResStartParam_fields[2];
extern const pb_field_t RepairResStartResult_fields[1];

/* Maximum encoded size of messages (where known) */
#define DeviceStatus_size                        231
#define DeviceRunState_size                      11
#define SeActivateResult_size                    11
#define DeviceInfo_size                          128
#define DeviceCredential_size                    105
#define DeviceUnBindToken_size                   105
#define DeviceMiUnBindToken_size                 107
#define DeviceMiRyeexDidToken_size               129
#define ServerUnBindToken_size                   105
#define ServerMiUnBindToken_size                 107
#define ServerRyeexBindToken_size                146
/* DeviceLostFileNames_size depends on runtime parameters */
#define BindAckResult_size                       11
#define BindResult_size                          45
#define UploadFileMeta_size                      2051
#define BleConnIntervalParam_size                11
#define RepairResStartParam_size                 11
#define RepairResStartResult_size                0

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DEVICE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
