/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Tue Oct 16 22:32:12 2018. */

#ifndef PB_SPORT_PB_H_INCLUDED
#define PB_SPORT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SportRidePauseParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRidePauseParam) */
} SportRidePauseParam;

typedef struct _SportRideResumeParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRideResumeParam) */
} SportRideResumeParam;

typedef struct _SportRideStartParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRideStartParam) */
} SportRideStartParam;

typedef struct _SportRideStopParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRideStopParam) */
} SportRideStopParam;

typedef struct _SportRideUpdateParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRideUpdateParam) */
} SportRideUpdateParam;

typedef struct _SportRideUpdateResult {
    int32_t session_id;
    float distance;
    bool has_gps_status;
    bool gps_status;
/* @@protoc_insertion_point(struct:SportRideUpdateResult) */
} SportRideUpdateResult;

typedef struct _SportRunPauseParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRunPauseParam) */
} SportRunPauseParam;

typedef struct _SportRunResumeParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRunResumeParam) */
} SportRunResumeParam;

typedef struct _SportRunStartParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRunStartParam) */
} SportRunStartParam;

typedef struct _SportRunStopParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRunStopParam) */
} SportRunStopParam;

typedef struct _SportRunUpdateParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportRunUpdateParam) */
} SportRunUpdateParam;

typedef struct _SportRunUpdateResult {
    int32_t session_id;
    float distance;
    bool has_gps_status;
    bool gps_status;
/* @@protoc_insertion_point(struct:SportRunUpdateResult) */
} SportRunUpdateResult;

typedef struct _SportWalkPauseParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportWalkPauseParam) */
} SportWalkPauseParam;

typedef struct _SportWalkResumeParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportWalkResumeParam) */
} SportWalkResumeParam;

typedef struct _SportWalkStartParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportWalkStartParam) */
} SportWalkStartParam;

typedef struct _SportWalkStopParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportWalkStopParam) */
} SportWalkStopParam;

typedef struct _SportWalkUpdateParam {
    int32_t session_id;
/* @@protoc_insertion_point(struct:SportWalkUpdateParam) */
} SportWalkUpdateParam;

typedef struct _SportWalkUpdateResult {
    int32_t session_id;
    float distance;
    bool has_gps_status;
    bool gps_status;
/* @@protoc_insertion_point(struct:SportWalkUpdateResult) */
} SportWalkUpdateResult;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SportRunStartParam_init_default          {0}
#define SportRunUpdateParam_init_default         {0}
#define SportRunPauseParam_init_default          {0}
#define SportRunResumeParam_init_default         {0}
#define SportRunUpdateResult_init_default        {0, 0, false, 0}
#define SportRunStopParam_init_default           {0}
#define SportRideStartParam_init_default         {0}
#define SportRideUpdateParam_init_default        {0}
#define SportRidePauseParam_init_default         {0}
#define SportRideResumeParam_init_default        {0}
#define SportRideUpdateResult_init_default       {0, 0, false, 0}
#define SportRideStopParam_init_default          {0}
#define SportWalkStartParam_init_default         {0}
#define SportWalkUpdateParam_init_default        {0}
#define SportWalkPauseParam_init_default         {0}
#define SportWalkResumeParam_init_default        {0}
#define SportWalkUpdateResult_init_default       {0, 0, false, 0}
#define SportWalkStopParam_init_default          {0}
#define SportRunStartParam_init_zero             {0}
#define SportRunUpdateParam_init_zero            {0}
#define SportRunPauseParam_init_zero             {0}
#define SportRunResumeParam_init_zero            {0}
#define SportRunUpdateResult_init_zero           {0, 0, false, 0}
#define SportRunStopParam_init_zero              {0}
#define SportRideStartParam_init_zero            {0}
#define SportRideUpdateParam_init_zero           {0}
#define SportRidePauseParam_init_zero            {0}
#define SportRideResumeParam_init_zero           {0}
#define SportRideUpdateResult_init_zero          {0, 0, false, 0}
#define SportRideStopParam_init_zero             {0}
#define SportWalkStartParam_init_zero            {0}
#define SportWalkUpdateParam_init_zero           {0}
#define SportWalkPauseParam_init_zero            {0}
#define SportWalkResumeParam_init_zero           {0}
#define SportWalkUpdateResult_init_zero          {0, 0, false, 0}
#define SportWalkStopParam_init_zero             {0}

/* Field tags (for use in manual encoding/decoding) */
#define SportRidePauseParam_session_id_tag       1
#define SportRideResumeParam_session_id_tag      1
#define SportRideStartParam_session_id_tag       1
#define SportRideStopParam_session_id_tag        1
#define SportRideUpdateParam_session_id_tag      1
#define SportRideUpdateResult_session_id_tag     1
#define SportRideUpdateResult_distance_tag       2
#define SportRideUpdateResult_gps_status_tag     3
#define SportRunPauseParam_session_id_tag        1
#define SportRunResumeParam_session_id_tag       1
#define SportRunStartParam_session_id_tag        1
#define SportRunStopParam_session_id_tag         1
#define SportRunUpdateParam_session_id_tag       1
#define SportRunUpdateResult_session_id_tag      1
#define SportRunUpdateResult_distance_tag        2
#define SportRunUpdateResult_gps_status_tag      3
#define SportWalkPauseParam_session_id_tag       1
#define SportWalkResumeParam_session_id_tag      1
#define SportWalkStartParam_session_id_tag       1
#define SportWalkStopParam_session_id_tag        1
#define SportWalkUpdateParam_session_id_tag      1
#define SportWalkUpdateResult_session_id_tag     1
#define SportWalkUpdateResult_distance_tag       2
#define SportWalkUpdateResult_gps_status_tag     3

/* Struct field encoding specification for nanopb */
extern const pb_field_t SportRunStartParam_fields[2];
extern const pb_field_t SportRunUpdateParam_fields[2];
extern const pb_field_t SportRunPauseParam_fields[2];
extern const pb_field_t SportRunResumeParam_fields[2];
extern const pb_field_t SportRunUpdateResult_fields[4];
extern const pb_field_t SportRunStopParam_fields[2];
extern const pb_field_t SportRideStartParam_fields[2];
extern const pb_field_t SportRideUpdateParam_fields[2];
extern const pb_field_t SportRidePauseParam_fields[2];
extern const pb_field_t SportRideResumeParam_fields[2];
extern const pb_field_t SportRideUpdateResult_fields[4];
extern const pb_field_t SportRideStopParam_fields[2];
extern const pb_field_t SportWalkStartParam_fields[2];
extern const pb_field_t SportWalkUpdateParam_fields[2];
extern const pb_field_t SportWalkPauseParam_fields[2];
extern const pb_field_t SportWalkResumeParam_fields[2];
extern const pb_field_t SportWalkUpdateResult_fields[4];
extern const pb_field_t SportWalkStopParam_fields[2];

/* Maximum encoded size of messages (where known) */
#define SportRunStartParam_size                  11
#define SportRunUpdateParam_size                 11
#define SportRunPauseParam_size                  11
#define SportRunResumeParam_size                 11
#define SportRunUpdateResult_size                18
#define SportRunStopParam_size                   11
#define SportRideStartParam_size                 11
#define SportRideUpdateParam_size                11
#define SportRidePauseParam_size                 11
#define SportRideResumeParam_size                11
#define SportRideUpdateResult_size               18
#define SportRideStopParam_size                  11
#define SportWalkStartParam_size                 11
#define SportWalkUpdateParam_size                11
#define SportWalkPauseParam_size                 11
#define SportWalkResumeParam_size                11
#define SportWalkUpdateResult_size               18
#define SportWalkStopParam_size                  11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SPORT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
