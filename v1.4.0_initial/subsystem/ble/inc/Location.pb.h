/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Mar 12 16:32:35 2018. */

#ifndef PB_LOCATION_PB_H_INCLUDED
#define PB_LOCATION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _LocationRequest {
    int32_t session_id;
    bool has_last_longitude;
    double last_longitude;
    bool has_last_latitude;
    double last_latitude;
/* @@protoc_insertion_point(struct:LocationRequest) */
} LocationRequest;

typedef struct _LocationResult {
    int32_t session_id;
    double longitude;
    double latitude;
    bool has_last_distance;
    float last_distance;
/* @@protoc_insertion_point(struct:LocationResult) */
} LocationResult;

/* Default values for struct fields */

/* Initializer values for message structs */
#define LocationRequest_init_default             {0, false, 0, false, 0}
#define LocationResult_init_default              {0, 0, 0, false, 0}
#define LocationRequest_init_zero                {0, false, 0, false, 0}
#define LocationResult_init_zero                 {0, 0, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define LocationRequest_session_id_tag           1
#define LocationRequest_last_longitude_tag       2
#define LocationRequest_last_latitude_tag        3
#define LocationResult_session_id_tag            1
#define LocationResult_longitude_tag             2
#define LocationResult_latitude_tag              3
#define LocationResult_last_distance_tag         4

/* Struct field encoding specification for nanopb */
extern const pb_field_t LocationRequest_fields[4];
extern const pb_field_t LocationResult_fields[5];

/* Maximum encoded size of messages (where known) */
#define LocationRequest_size                     29
#define LocationResult_size                      34

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LOCATION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
